on: [push, pull_request]
name: Continuous Integration

jobs:
  test:
    name: Test
    runs-on: ${{matrix.os.fullname}}
    strategy:
       fail-fast: false
       matrix:
          os:
            - { prettyname: Windows, fullname: windows-latest }
            - { prettyname: macOS, fullname: macos-latest }
            - { prettyname: Linux, fullname: ubuntu-latest }
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install .NET 5.0.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0.x"

      - name: Compile
        run: dotnet build -c Debug -warnaserror osu.Server.PerformanceCalculator.sln

  inspect-code:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # FIXME: Tools won't run in .NET 5.0 unless you install 3.1.x LTS side by side.
      # https://itnext.io/how-to-support-multiple-net-sdks-in-github-actions-workflows-b988daa884e
      - name: Install .NET 3.1.x LTS
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "3.1.x"

      - name: Install .NET 5.0.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0.x"

      - name: Restore Tools
        run: dotnet tool restore

      - name: Restore Packages
        run: dotnet restore

      - name: CodeFileSanity
        run: |
          # TODO: Add ignore filters and GitHub Workflow Command Reporting in CFS. That way we don't have to do this workaround.
          # FIXME: Suppress warnings from templates project
          dotnet codefilesanity | while read -r line; do
            echo "::warning::$line"
          done

      # Temporarily disabled due to test failures, but it won't work anyway until the tool is upgraded.
      # - name: .NET Format (Dry Run)
      #   run: dotnet format --dry-run --check

      - name: InspectCode
        run: dotnet jb inspectcode $(pwd)/osu.Server.PerformanceCalculator.sln --output=$(pwd)/inspectcodereport.xml --cachesDir=$(pwd)/inspectcode --verbosity=WARN

      - name: NVika
        run: dotnet nvika parsereport "${{github.workspace}}/inspectcodereport.xml" --treatwarningsaserrors
